---
import Image from '../components/Image.astro'
import Timeline from '../components/Timeline.astro'
import SanityBlockContent from '../components/SanityBlockContent.jsx'
import Debug from 'astro/debug'

const { post, lang } = Astro.props
//console.log('POST', post.summary)
//post.galleries.map(g => console.log(g))
//console.log(SanityBlockContent({"blocks":post.summary}))
const imgsize = { "default": 480, "double": 960, "full": 1600 }
const ratio = { "default": 75, "double": 55, "full": 50 }
---

<!--
  - You can also use imported framework components directly in your markup!
  -
  - Note: by default, these components are NOT interactive on the client.
  - The `:visible` directive tells Astro to make it interactive.
  -
  - See https://docs.astro.build/core-concepts/component-hydration/ 
-->

{post?.title &&
<h1>{post.title}</h1>}

{post?.image?.asset && 
<Image lazy radius double image={post.image} w="960" />}

{post?.subtitle &&
<h2>{post.subtitle}</h2>}

{post?.summary && 
<header>
  <SanityBlockContent blocks={post.summary}/>
</header>}

{post?.body && 
<article>
  <SanityBlockContent blocks={post.body}/>
</article>}

{post?.timeline && 
<article>
  <Timeline timeline={post.timeline} {lang}/>
</article>}

{post?.galleries?.map(gal => (
  <>
  {gal.title && <h2>{gal.title[lang]}</h2>}
  <section>
  {gal.posts.map(item => item._lang == lang && (
    item.weblink ? (
      <a href={item.weblink} class={item.size}>
        <h2>{item.title}</h2>
        {item.image?.asset && <Image lazy {item.size} image={item.image} w={imgsize[item.size]} ratio={ratio[item.size]} {lang}/>}
        {item.subtitle && <h3>{item.subtitle}</h3>}
        {!!item.summary && <SanityBlockContent blocks={item.summary}/>}
      </a>
    ) : (
      <Debug {item}/>
      <div class={item.size}>
        <h2>{item.title}</h2>
        {item.image?.asset && <Image lazy {item.size} zoom image={item.image} w={imgsize[item.size]} ratio={ratio[item.size]} {lang}/>}
        {item.subtitle && <h3>{item.subtitle}</h3>}
        {!!item.summary && <SanityBlockContent blocks={item.summary}/>}
      </div>
    ))
  )}
  </section>
  </>
))}

<!--
{post?.reltitle &&
<h2>{post.reltitle}</h2>}

{post?.relposts && 
<section>
  {post.relposts.map(item => (
    item.weblink || item.category ? (
    <a href={item.weblink || `/${item.category.slug[item._lang].current}/${item.slug.current}`} class={item.size}>
      <h3>{item.menutitle || item.title}</h3>
      {item.image?.asset && <Image lazy image={item.image} w={imgsize[item.size]} ratio={ratio[item.size]}/>}
      {item.subtitle && <h3>{item.subtitle}</h3>}
      {!!item.summary && <SanityBlockContent blocks={item.summary}/>}
    </a>
    ) : (
    <div class={item.size}>
      <h3>{item.menutitle || item.title}</h3>
      {item.image?.asset && <Image lazy image={item.image} w={imgsize[item.size]} ratio={ratio[item.size]}/>}
      {item.subtitle && <h3>{item.subtitle}</h3>}
      {!!item.summary && <SanityBlockContent blocks={item.summary}/>}
    </div>
    )
  ))}
</section>
}-->

<style>
</style>
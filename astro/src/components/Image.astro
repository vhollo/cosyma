---
import { getSanityImageUrl, formatBlogPostDate } from '../utils/helpers.js'
const { image, radius, lazy, double, lang, zoom } = Astro.props
//console.log('IMAGE',image)
let src//, srczoom
const { caption } = image || {}
const loading = !!lazy ? 'lazy' : 'eager'

//if (image?.asset) {
  let { w } = Astro.props
  w = w || 960

  let { h } = Astro.props
  h = h || false
  let { ratio } = Astro.props
  if (ratio) h = w * ratio / 100

  if (h) {
    src = getSanityImageUrl(image).width(w).height(h).format('webp').url() || null
  } else {
    src = getSanityImageUrl(image).width(w).format('webp').url() || null
  }
  const srczoom = getSanityImageUrl(image).width(1600).format('webp').url() || null
  const onclick = !!zoom ? `_zoomin('${srczoom}')` : null
//}
---
{src && 
  <figure class={`${(radius ? 'radius ' : '')} ${(double ? 'double' : '')}`}>
    <img {loading} {src} class={`${(zoom ? 'zoom' : '')}`} alt="" {onclick}/>
    {!!caption && <figcaption lang={lang}>{caption[lang] || caption}</figcaption>}
  </figure>
}
<link rel="preload" as="image" href={srczoom}>
<!--<link rel="prefetch" as="image" href={srczoom}>-->

<style>
	figure {
    max-width: var(--figurewidth, 100%);
		margin: 1rem auto;
    /*max-height: 30vh;*/
    width: auto;
    overflow: hidden;
	}

	.radius img {
    /* nem kell */
    /*border-radius: 0.5rem;*/
    /*max-width:none;*/
	}
	img, figcaption {
		margin: 0 auto 1rem;
    box-shadow: var(--shadow) 0 0 0.5rem;
    --figurewidth: 32ch;
    max-width: 100%;
	}
  .double img {
    max-height: 45vh;
  }
  img.zoom {
    cursor:zoom-in;
  }
</style>